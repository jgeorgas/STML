<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://dana.ucc.nau.edu/jew69/schemas/stml/stml_graph.xsd" 
	xmlns:archdiff="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/diff.xsd" 
	xmlns:archinstance="http://dana.ucc.nau.edu/jew69/schemas/archstudio/core/instance.xsd" 
	xmlns:archtypes="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/types.xsd" 
	xmlns:xlink="http://www.w3.org/1999/xlink" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	attributeFormDefault="qualified" 
	elementFormDefault="qualified" 
	targetNamespace="http://dana.ucc.nau.edu/jew69/schemas/stml/stml_graph.xsd">

	<!-- Import namespaces used -->
	<xsd:import namespace="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/types.xsd" schemaLocation="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/types.xsd"/>
	<xsd:import namespace="http://dana.ucc.nau.edu/jew69/schemas/archstudio/core/instance.xsd" schemaLocation="http://dana.ucc.nau.edu/jew69/schemas/archstudio/core/instance.xsd"/>
	<xsd:import namespace="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/diff.xsd" schemaLocation="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/diff.xsd"/>

	<xsd:annotation>
		<xsd:documentation>
		STML Graph
		
		A schema that captures the fundamental concepts related to the construction of
		graphs, such as nodes and edges.
		
        LOG:
        
        11/30/2011 -- [John.Georgas@nau.edu]
        Initial release of the resource schema, after re-factoring and clean-up
        of the STML language (previously called STCML).
        1/30/2012 -- [John.Georgas@nau.edu]
        Added additional elements to support linking to events: LinkedEdge, WeightedLinkedEdge,
        DirectedLinkedEdge, WeightedDirectedLinkedEdge
        
        NOTES:
        				
        TODO:
        	-- Weighted edges might need to be revisited and made more complex.
        	-- Add namespace references into each of the type links
        	-- Fix the namespace references to appropriate URLs. Github publishing? Need
        	clear URLs for Apigen library generation.
        	
        	????:
        	
		</xsd:documentation>
	</xsd:annotation>
	
	<!--
		TYPE: Graph
	
		A generic graph type, consisting simply of nodes. Since directed and undirected
		graphs are differentiated by their edges, sub-types establish those graph types
		through edge specialization.
	-->
	<xsd:complexType name="Graph">
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="node" type="Node"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="archinstance:Identifier"/>
	</xsd:complexType>
	
	<!-- 
		TYPE: UndirectedGraph
	
		An undirected graph, consisting of nodes and binary edges.
	-->
	<xsd:complexType name="UndirectedGraph">
		<xsd:complexContent>
			<xsd:extension base="Graph">
	        		<xsd:sequence>
	          		<xsd:element maxOccurs="unbounded" minOccurs="0" name="edge" type="Edge"/>
	        		</xsd:sequence>
      			</xsd:extension>
   	 	</xsd:complexContent>
  	</xsd:complexType>
  	
  	<!-- 
  		TYPE: DirectedGraph
	
		A directed graph, consisting of nodes and directed edges.
	-->
	<xsd:complexType name="DirectedGraph">
		<xsd:complexContent>
			<xsd:extension base="Graph">
	        		<xsd:sequence>
	          		<xsd:element maxOccurs="unbounded" minOccurs="0" name="directedEdge" type="DirectedEdge"/>
	        		</xsd:sequence>
      		</xsd:extension>
    		</xsd:complexContent>
  	</xsd:complexType>
	
	<!--
		TYPE: Node
	
		A generic graph node, with an identifier and an optional description. Other schema
		provide more specialized node types that are augmented with additional information.
	-->
	<xsd:complexType name="Node">
		<xsd:sequence>
			<xsd:element maxOccurs="1" minOccurs="0" name="description" type="archinstance:Description"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="archinstance:Identifier"/>
	</xsd:complexType>
	
	<!--
		TYPE: Edge
  
		A generic undirected graph edge.
	-->
	<xsd:complexType name="Edge">
		<xsd:sequence>
			<xsd:element maxOccurs="2" minOccurs="2" name="endpoint" type="archinstance:XMLLink"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="archinstance:Identifier"/>
	</xsd:complexType>
	
	<!-- LinkedEdge
		A generic undirected edge, with a link to an event that caused the edge's creation.
	-->
	<xsd:complexType name="LinkedEdge">
		<xsd:complexContent>
			<xsd:extension base="Edge">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="linkedEvent" type="archinstance:XMLLink"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- 
		TYPE: WeightedEdge
		
		A weighted edge, that contains a string representation of a weight.	
	-->
	<xsd:complexType name="WeightedEdge">
		<xsd:complexContent>
			<xsd:extension base="Edge">
				<xsd:attribute name="weight" type="xsd:string"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- 
		TYPE: WeightedLinkedEdge
		
		A weighted edge, that contains a string representation of a weight, as well
		as a link to an event.
	-->
	<xsd:complexType name="WeightedLinkedEdge">
		<xsd:complexContent>
			<xsd:extension base="LinkedEdge">
				<xsd:attribute name="weight" type="xsd:string"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!--
		TYPE: DirectedEdge
  
		A generic directed graph edge.
	-->
	<xsd:complexType name="DirectedEdge">
		<xsd:sequence>
			<xsd:element maxOccurs="1" minOccurs="1" name="head" type="archinstance:XMLLink"/>
			<xsd:element maxOccurs="1" minOccurs="1" name="tail" type="archinstance:XMLLink"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="archinstance:Identifier"/>
	</xsd:complexType>
	
	<!--
		TYPE: DirectedLinkedEdge
  
		A generic directed graph edge, with a link to an event.
	-->
	<xsd:complexType name="DirectedLinkedEdge">
		<xsd:complexContent>
			<xsd:extension base="DirectedEdge">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="linkedEvent" type="archinstance:XMLLink"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
		
	<!--
		TYPE: WeightedDirectedEdge
		
		An edge combining directionality and weight.	
	-->
	<xsd:complexType name="WeightedDirectedEdge">
		<xsd:complexContent>
			<xsd:extension base="DirectedEdge">
				<xsd:attribute name="weight" type="xsd:string"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!--
		TYPE: WeightedDirectedLinkedEdge
		
		An edge combining directionality and weight.	
	-->
	<xsd:complexType name="WeightedDirectedLinkedEdge">
		<xsd:complexContent>
			<xsd:extension base="WeightedDirectedEdge">
				<xsd:attribute name="weight" type="xsd:string"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>