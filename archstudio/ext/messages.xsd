<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/messages.xsd" 
            xmlns:archinstance="http://dana.ucc.nau.edu/jew69/schemas/archstudio/core/instance.xsd" 
            xmlns:archvers="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/versions.xsd" 
            xmlns:xlink="http://www.w3.org/1999/xlink" 
            xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
            xmlns="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/messages.xsd" 
            elementFormDefault="qualified" 
            attributeFormDefault="qualified">

  <xsd:import namespace="http://dana.ucc.nau.edu/jew69/schemas/archstudio/core/instance.xsd" 
              schemaLocation="http://dana.ucc.nau.edu/jew69/schemas/archstudio/core/instance.xsd"/>
  <xsd:import namespace="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/versions.xsd" 
              schemaLocation="http://dana.ucc.nau.edu/jew69/schemas/archstudio/ext/versions.xsd"/>

  <xsd:annotation>
    <xsd:documentation>
      xArch Message XML Schema 1.0
        
      Change Log:
         2002-07-23: Eric M. Dashofy [edashofy@ics.uci.edu]:
           Changed location of core (xArch) schema in the import
           statement to a more stable URL.
        2002-07-08: Eric M. Dashofy [edashofy@ics.uci.edu]:
          Cleanup and posting as an official xADL 2.0 schema.
        2002-05-xx:
          Reorganized Message-type structure
        2002-03-xx:
          Initial Development and validated with XML Spy 4.3
    </xsd:documentation>
  </xsd:annotation>

  <!--
    ELEMENT: ruleSpecification
    
    A RuleSpecification lists the message production rules of a component or connector.
   -->
  <xsd:element name="ruleSpecification" type="RuleSpecification"/>

  <!--
    TYPE: RuleSpecification
    
    A RuleSpecification lists the message production rules of a component or connector.
   -->
  <xsd:complexType name="RuleSpecification">
    <xsd:sequence>
      <xsd:element name="description" type="archinstance:Description" 
                   minOccurs="0"/>
      <xsd:element name="rule" type="ProductionRule" 
                   maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="archinstance:Identifier"/>
  </xsd:complexType>

  <!--
    TYPE: ProductionRule
    
    The ProductionRule type specifies the messages received and the messages that
    are sent out as a result of the received messages.  A count is specified for each
    message.
   -->
  <xsd:complexType name="ProductionRule">
    <xsd:sequence>
      <xsd:element name="description" type="archinstance:Description"/>
      <xsd:element name="receiveMessage" type="GenericMessage" 
                   maxOccurs="unbounded"/>
      <xsd:element name="sendMessage" type="GenericMessage" 
                   maxOccurs="unbounded"/>
      <xsd:element name="causeTime" type="CauseTime"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="archinstance:Identifier"/>
  </xsd:complexType>

  <!--
    TYPE: VariantComponentTypeImplVersSpec
    
    The VariantComponentTypeImplVersSpec type addes a message casuality
    specification to a component.
   -->
  <xsd:complexType name="VariantComponentTypeImplVersSpec">
    <xsd:complexContent>
      <xsd:extension base="archvers:VariantComponentTypeImplVers">
        <xsd:sequence>
          <xsd:element name="messageCausalitySpecification" 
                       type="MessageCausalitySpecification"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!--
    TYPE: VariantConnectorTypeImplVersSpec
    
    The  VariantConnectorTypeImplVersSpec type addes a message casuality
    specification to a component.
  -->
  <xsd:complexType name="VariantConnectorTypeImplVersSpec">
    <xsd:complexContent>
      <xsd:extension base="archvers:VariantConnectorTypeImplVers">
        <xsd:sequence>
          <xsd:element name="messageCausalitySpecification" 
                       type="MessageCausalitySpecification"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!--
    TYPE: MessageCausalitySpecification
    
    The MessageCausalitySpecification type specifies a list of rules for message casuality
    for the component or connector.  A rule is an XMLLink to a ProductionRule in the rule
    specification.
   -->
  <xsd:complexType name="MessageCausalitySpecification">
    <xsd:sequence>
      <xsd:element name="rule" type="archinstance:XMLLink" 
                   minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <!--
    TYPE: GenericMessage
    
    The GenericMessage represents data passed between the components of a system.
   -->
  <xsd:complexType name="GenericMessage">
    <xsd:sequence>
      <xsd:element name="description" type="archinstance:Description" 
                   minOccurs="0"/>
      <xsd:element name="count" type="Count"/>
      <xsd:element name="type" type="MessageType"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="archinstance:Identifier"/>
    <xsd:attribute name="kind" type="Kind"/>
  </xsd:complexType>

  <!--
    TYPE: NamedPropertyMessage
    
    The NamedPropertyMessage extends the Message type and adds a name to the message.
    A named  message represents a specific named message passed between the
    components of a system.
   -->
  <xsd:complexType name="NamedPropertyMessage">
    <xsd:complexContent>
      <xsd:extension base="GenericMessage">
        <xsd:sequence>
          <xsd:element name="name" type="MessageName"/>
          <xsd:element name="namedProperty" type="NamedProperty" 
                       minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!--
    TYPE: Kind
    
    The Kind type specifies the direction of the mesage according to the C2-style.
    A message going up is a request, while a message going doing down is a notification.
   -->
  <xsd:simpleType name="Kind">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="none"/>
      <xsd:enumeration value="request"/>
      <xsd:enumeration value="notification"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!--
    TYPE: Count
    
    The Count type specifies the number of messages received or produced
   -->
  <xsd:complexType name="Count">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>

  <!--
    TYPE: MessageName
    
    The MessageName type specifies the name of a message.
   -->
  <xsd:complexType name="MessageName">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>

  <!--
    TYPE: MessageType
    
    The MessageType type specifies the type of a message.
   -->
  <xsd:complexType name="MessageType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>

  <!--
    TYPE: CauseTime
    
    The CauseTime type specifies the temporal relationship between messages
    received and messages produced.  The possible values are:
       "MostRecent" - the last message received caused the message produced
       "MatchingN"  - the n-th received message caused the n-th produced message
   -->
  <xsd:complexType name="CauseTime">
    <xsd:simpleContent>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="MostRecent"/>
        <xsd:enumeration value="MatchingN"/>
      </xsd:restriction>
    </xsd:simpleContent>
  </xsd:complexType>

  <!--
    TYPE: NamedProperty
    
    The NamedProperty type specifies a property associated with messages of
    type NamedPropertyMessage.  A Named Property contains two elements, name
    and value.
   -->
  <xsd:complexType name="NamedProperty">
    <xsd:sequence>
      <xsd:element name="name" type="PropertyName"/>
      <xsd:element name="value" type="PropertyValue"/>
    </xsd:sequence>
  </xsd:complexType>

  <!--
    TYPE: PropertyName
    
    The  PropertyName  type specifies the name of a property
   -->
  <xsd:complexType name="PropertyName">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>

  <!--
    TYPE: PropertyValue
    
    The PropertyValue type specifies the value of a property
   -->
  <xsd:complexType name="PropertyValue">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string"/>
    </xsd:simpleContent>
  </xsd:complexType>

</xsd:schema>
